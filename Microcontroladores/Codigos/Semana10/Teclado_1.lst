;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 4/12/2023 16:47:54
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x2895      	GOTO       149
_interrupt:
0x0004	0x00FF      	MOVWF      R15
0x0005	0x0E03      	SWAPF      STATUS, 0
0x0006	0x0183      	CLRF       STATUS
0x0007	0x00A4      	MOVWF      ___saveSTATUS
0x0008	0x080A      	MOVF       PCLATH, 0
0x0009	0x00A3      	MOVWF      ___savePCLATH
0x000A	0x018A      	CLRF       PCLATH
;Teclado_1.c,25 :: 		void interrupt(){
;Teclado_1.c,26 :: 		if (INTCON.f0 == 1){
0x000B	0x1C0B      	BTFSS      INTCON, 0
0x000C	0x280F      	GOTO       L_interrupt16
;Teclado_1.c,27 :: 		teclado4x4();
0x000D	0x2029      	CALL       _teclado4x4
;Teclado_1.c,28 :: 		INTCON.f0 = 0;
0x000E	0x100B      	BCF        INTCON, 0
;Teclado_1.c,29 :: 		}
L_interrupt16:
;Teclado_1.c,30 :: 		}
L_end_interrupt:
L__interrupt21:
0x000F	0x0823      	MOVF       ___savePCLATH, 0
0x0010	0x008A      	MOVWF      PCLATH
0x0011	0x0E24      	SWAPF      ___saveSTATUS, 0
0x0012	0x0083      	MOVWF      STATUS
0x0013	0x0EFF      	SWAPF      R15, 1
0x0014	0x0E7F      	SWAPF      R15, 0
0x0015	0x0009      	RETFIE
; end of _interrupt
_____DoICP:
;__Lib_System.c,6 :: 		
;__Lib_System.c,9 :: 		
0x0016	0x1283      	BCF        STATUS, 5
0x0017	0x1303      	BCF        STATUS, 6
0x0018	0x0822      	MOVF       ___DoICPAddr+1, 0
0x0019	0x008A      	MOVWF      PCLATH
;__Lib_System.c,10 :: 		
0x001A	0x0821      	MOVF       ___DoICPAddr, 0
0x001B	0x0082      	MOVWF      PCL
;__Lib_System.c,12 :: 		
L_end_____DoICP:
0x001C	0x0008      	RETURN
; end of _____DoICP
___CC2DW:
;__Lib_System.c,134 :: 		
;__Lib_System.c,137 :: 		
_CC2D_Loop1:
;__Lib_System.c,139 :: 		
0x001D	0x2016      	CALL       _____DoICP
0x001E	0x118A      	BCF        PCLATH, 3
0x001F	0x120A      	BCF        PCLATH, 4
;__Lib_System.c,141 :: 		
0x0020	0x0080      	MOVWF      INDF
;__Lib_System.c,142 :: 		
0x0021	0x0A84      	INCF       FSR, 1
;__Lib_System.c,143 :: 		
0x0022	0x0AA1      	INCF       ___DoICPAddr, 1
;__Lib_System.c,145 :: 		
0x0023	0x1903      	BTFSC      STATUS, 2
;__Lib_System.c,146 :: 		
0x0024	0x0AA2      	INCF       ___DoICPAddr+1, 1
;__Lib_System.c,147 :: 		
0x0025	0x03F0      	DECF       R0, 1
;__Lib_System.c,149 :: 		
0x0026	0x1D03      	BTFSS      STATUS, 2
;__Lib_System.c,150 :: 		
0x0027	0x281D      	GOTO       _CC2D_Loop1
;__Lib_System.c,152 :: 		
L_end___CC2DW:
0x0028	0x0008      	RETURN
; end of ___CC2DW
_teclado4x4:
;Teclado_1.c,2 :: 		void teclado4x4(){
;Teclado_1.c,3 :: 		PORTB = 0x0E; // 00001110
0x0029	0x300E      	MOVLW      14
0x002A	0x1283      	BCF        STATUS, 5
0x002B	0x1303      	BCF        STATUS, 6
0x002C	0x0086      	MOVWF      PORTB
;Teclado_1.c,4 :: 		if(PORTB == 0xEE){tecla = 1;} // 11101110
0x002D	0x0806      	MOVF       PORTB, 0
0x002E	0x3AEE      	XORLW      238
0x002F	0x1D03      	BTFSS      STATUS, 2
0x0030	0x2833      	GOTO       L_teclado4x40
0x0031	0x3001      	MOVLW      1
0x0032	0x00A0      	MOVWF      _tecla
L_teclado4x40:
;Teclado_1.c,5 :: 		if(PORTB == 0xDE){tecla = 2;} // 11011110
0x0033	0x0806      	MOVF       PORTB, 0
0x0034	0x3ADE      	XORLW      222
0x0035	0x1D03      	BTFSS      STATUS, 2
0x0036	0x2839      	GOTO       L_teclado4x41
0x0037	0x3002      	MOVLW      2
0x0038	0x00A0      	MOVWF      _tecla
L_teclado4x41:
;Teclado_1.c,6 :: 		if(PORTB == 0xBE){tecla = 3;} // 10111110
0x0039	0x0806      	MOVF       PORTB, 0
0x003A	0x3ABE      	XORLW      190
0x003B	0x1D03      	BTFSS      STATUS, 2
0x003C	0x283F      	GOTO       L_teclado4x42
0x003D	0x3003      	MOVLW      3
0x003E	0x00A0      	MOVWF      _tecla
L_teclado4x42:
;Teclado_1.c,7 :: 		if(PORTB == 0x7E){tecla = 4;} // 01111110
0x003F	0x0806      	MOVF       PORTB, 0
0x0040	0x3A7E      	XORLW      126
0x0041	0x1D03      	BTFSS      STATUS, 2
0x0042	0x2845      	GOTO       L_teclado4x43
0x0043	0x3004      	MOVLW      4
0x0044	0x00A0      	MOVWF      _tecla
L_teclado4x43:
;Teclado_1.c,8 :: 		PORTB = 0x0D; // 00001101
0x0045	0x300D      	MOVLW      13
0x0046	0x0086      	MOVWF      PORTB
;Teclado_1.c,9 :: 		if(PORTB == 0xED){tecla = 5;} // 11101101
0x0047	0x0806      	MOVF       PORTB, 0
0x0048	0x3AED      	XORLW      237
0x0049	0x1D03      	BTFSS      STATUS, 2
0x004A	0x284D      	GOTO       L_teclado4x44
0x004B	0x3005      	MOVLW      5
0x004C	0x00A0      	MOVWF      _tecla
L_teclado4x44:
;Teclado_1.c,10 :: 		if(PORTB == 0xDD){tecla = 6;} // 11011101
0x004D	0x0806      	MOVF       PORTB, 0
0x004E	0x3ADD      	XORLW      221
0x004F	0x1D03      	BTFSS      STATUS, 2
0x0050	0x2853      	GOTO       L_teclado4x45
0x0051	0x3006      	MOVLW      6
0x0052	0x00A0      	MOVWF      _tecla
L_teclado4x45:
;Teclado_1.c,11 :: 		if(PORTB == 0xBD){tecla = 7;} // 10111101
0x0053	0x0806      	MOVF       PORTB, 0
0x0054	0x3ABD      	XORLW      189
0x0055	0x1D03      	BTFSS      STATUS, 2
0x0056	0x2859      	GOTO       L_teclado4x46
0x0057	0x3007      	MOVLW      7
0x0058	0x00A0      	MOVWF      _tecla
L_teclado4x46:
;Teclado_1.c,12 :: 		if(PORTB == 0x7D){tecla = 8;} // 01111101
0x0059	0x0806      	MOVF       PORTB, 0
0x005A	0x3A7D      	XORLW      125
0x005B	0x1D03      	BTFSS      STATUS, 2
0x005C	0x285F      	GOTO       L_teclado4x47
0x005D	0x3008      	MOVLW      8
0x005E	0x00A0      	MOVWF      _tecla
L_teclado4x47:
;Teclado_1.c,13 :: 		PORTB = 0x0B; // 00001011
0x005F	0x300B      	MOVLW      11
0x0060	0x0086      	MOVWF      PORTB
;Teclado_1.c,14 :: 		if(PORTB == 0xEB){tecla = 9;} // 11101011
0x0061	0x0806      	MOVF       PORTB, 0
0x0062	0x3AEB      	XORLW      235
0x0063	0x1D03      	BTFSS      STATUS, 2
0x0064	0x2867      	GOTO       L_teclado4x48
0x0065	0x3009      	MOVLW      9
0x0066	0x00A0      	MOVWF      _tecla
L_teclado4x48:
;Teclado_1.c,15 :: 		if(PORTB == 0xDB){tecla = 10;} // 11011011
0x0067	0x0806      	MOVF       PORTB, 0
0x0068	0x3ADB      	XORLW      219
0x0069	0x1D03      	BTFSS      STATUS, 2
0x006A	0x286D      	GOTO       L_teclado4x49
0x006B	0x300A      	MOVLW      10
0x006C	0x00A0      	MOVWF      _tecla
L_teclado4x49:
;Teclado_1.c,16 :: 		if(PORTB == 0xBB){tecla = 11;} // 10111011
0x006D	0x0806      	MOVF       PORTB, 0
0x006E	0x3ABB      	XORLW      187
0x006F	0x1D03      	BTFSS      STATUS, 2
0x0070	0x2873      	GOTO       L_teclado4x410
0x0071	0x300B      	MOVLW      11
0x0072	0x00A0      	MOVWF      _tecla
L_teclado4x410:
;Teclado_1.c,17 :: 		if(PORTB == 0x7B){tecla = 12;} // 01111011
0x0073	0x0806      	MOVF       PORTB, 0
0x0074	0x3A7B      	XORLW      123
0x0075	0x1D03      	BTFSS      STATUS, 2
0x0076	0x2879      	GOTO       L_teclado4x411
0x0077	0x300C      	MOVLW      12
0x0078	0x00A0      	MOVWF      _tecla
L_teclado4x411:
;Teclado_1.c,18 :: 		PORTB = 0x07; // 00000111
0x0079	0x3007      	MOVLW      7
0x007A	0x0086      	MOVWF      PORTB
;Teclado_1.c,19 :: 		if(PORTB == 0xE7){tecla = 13;} // 11100111
0x007B	0x0806      	MOVF       PORTB, 0
0x007C	0x3AE7      	XORLW      231
0x007D	0x1D03      	BTFSS      STATUS, 2
0x007E	0x2881      	GOTO       L_teclado4x412
0x007F	0x300D      	MOVLW      13
0x0080	0x00A0      	MOVWF      _tecla
L_teclado4x412:
;Teclado_1.c,20 :: 		if(PORTB == 0xD7){tecla = 14;} // 11010111
0x0081	0x0806      	MOVF       PORTB, 0
0x0082	0x3AD7      	XORLW      215
0x0083	0x1D03      	BTFSS      STATUS, 2
0x0084	0x2887      	GOTO       L_teclado4x413
0x0085	0x300E      	MOVLW      14
0x0086	0x00A0      	MOVWF      _tecla
L_teclado4x413:
;Teclado_1.c,21 :: 		if(PORTB == 0xB7){tecla = 15;} // 10110111
0x0087	0x0806      	MOVF       PORTB, 0
0x0088	0x3AB7      	XORLW      183
0x0089	0x1D03      	BTFSS      STATUS, 2
0x008A	0x288D      	GOTO       L_teclado4x414
0x008B	0x300F      	MOVLW      15
0x008C	0x00A0      	MOVWF      _tecla
L_teclado4x414:
;Teclado_1.c,22 :: 		if(PORTB == 0x77){tecla = 16;} // 01110111
0x008D	0x0806      	MOVF       PORTB, 0
0x008E	0x3A77      	XORLW      119
0x008F	0x1D03      	BTFSS      STATUS, 2
0x0090	0x2893      	GOTO       L_teclado4x415
0x0091	0x3010      	MOVLW      16
0x0092	0x00A0      	MOVWF      _tecla
L_teclado4x415:
;Teclado_1.c,23 :: 		PORTB = 0x00;
0x0093	0x0186      	CLRF       PORTB
;Teclado_1.c,24 :: 		}
L_end_teclado4x4:
0x0094	0x0008      	RETURN
; end of _teclado4x4
_main:
0x0095	0x1283      	BCF        STATUS, 5
0x0096	0x1303      	BCF        STATUS, 6
0x0097	0x01A0      	CLRF       _tecla
;Teclado_1.c,32 :: 		void main() {
;Teclado_1.c,33 :: 		TRISB = 0xF0;
0x0098	0x30F0      	MOVLW      240
0x0099	0x1683      	BSF        STATUS, 5
0x009A	0x0086      	MOVWF      TRISB
;Teclado_1.c,34 :: 		PORTB = 0;
0x009B	0x1283      	BCF        STATUS, 5
0x009C	0x0186      	CLRF       PORTB
;Teclado_1.c,35 :: 		TRISC = 0;
0x009D	0x1683      	BSF        STATUS, 5
0x009E	0x0187      	CLRF       TRISC
;Teclado_1.c,36 :: 		PORTC = 0;
0x009F	0x1283      	BCF        STATUS, 5
0x00A0	0x0187      	CLRF       PORTC
;Teclado_1.c,37 :: 		OPTION_REG.f7 = 0; // habilitamos pull up
0x00A1	0x1683      	BSF        STATUS, 5
0x00A2	0x1381      	BCF        OPTION_REG, 7
;Teclado_1.c,38 :: 		INTCON = 0b10001000; // hab interr. por PORTB
0x00A3	0x3088      	MOVLW      136
0x00A4	0x008B      	MOVWF      INTCON
;Teclado_1.c,39 :: 		while(1){
L_main17:
;Teclado_1.c,40 :: 		PORTC = tecla;
0x00A5	0x1283      	BCF        STATUS, 5
0x00A6	0x0820      	MOVF       _tecla, 0
0x00A7	0x0087      	MOVWF      PORTC
;Teclado_1.c,41 :: 		}
0x00A8	0x28A5      	GOTO       L_main17
;Teclado_1.c,42 :: 		}
L_end_main:
0x00A9	0x28A9      	GOTO       $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0004      [18]    _interrupt
0x0016       [7]    _____DoICP
0x001D      [12]    ___CC2DW
0x0029     [108]    _teclado4x4
0x0095      [21]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    INDF
0x0002       [1]    PCL
0x0003       [1]    STATUS
0x0004       [1]    FSR
0x0006       [1]    PORTB
0x0007       [1]    PORTC
0x000A       [1]    PCLATH
0x000B       [1]    INTCON
0x0020       [1]    _tecla
0x0021       [2]    ___DoICPAddr
0x0023       [1]    ___savePCLATH
0x0024       [1]    ___saveSTATUS
0x0070       [1]    R0
0x0071       [1]    R1
0x0072       [1]    R2
0x0073       [1]    R3
0x0074       [1]    R4
0x0075       [1]    R5
0x0076       [1]    R6
0x0077       [1]    R7
0x0078       [1]    R8
0x0079       [1]    R9
0x007A       [1]    R10
0x007B       [1]    R11
0x007C       [1]    R12
0x007D       [1]    R13
0x007E       [1]    R14
0x007F       [1]    R15
0x0081       [1]    OPTION_REG
0x0086       [1]    TRISB
0x0087       [1]    TRISC
