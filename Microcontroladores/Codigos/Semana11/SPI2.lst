;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 11/12/2023 18:37:34
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x283B      	GOTO       59
_SPI1_Write:
;__Lib_SPI_c345.c,77 :: 		
;__Lib_SPI_c345.c,80 :: 		
0x0003	0x1283      	BCF        STATUS, 5
0x0004	0x1303      	BCF        STATUS, 6
0x0005	0x0820      	MOVF       FARG_SPI1_Write_data_, 0
0x0006	0x0093      	MOVWF      SSPBUF
;__Lib_SPI_c345.c,81 :: 		
L_SPI1_Write8:
0x0007	0x1683      	BSF        STATUS, 5
0x0008	0x1814      	BTFSC      SSPSTAT, 0
0x0009	0x280C      	GOTO       L_SPI1_Write9
;__Lib_SPI_c345.c,82 :: 		
0x000A	0x0000      	NOP
0x000B	0x2807      	GOTO       L_SPI1_Write8
L_SPI1_Write9:
;__Lib_SPI_c345.c,83 :: 		
0x000C	0x1283      	BCF        STATUS, 5
0x000D	0x0813      	MOVF       SSPBUF, 0
0x000E	0x00F0      	MOVWF      R0
;__Lib_SPI_c345.c,84 :: 		
L_end_SPI1_Write:
0x000F	0x0008      	RETURN
; end of _SPI1_Write
_SPI1_Init:
;__Lib_SPI_c345.c,23 :: 		
;__Lib_SPI_c345.c,24 :: 		
0x0010	0x30FF      	MOVLW      _SPI1_Read
0x0011	0x1283      	BCF        STATUS, 5
0x0012	0x1303      	BCF        STATUS, 6
0x0013	0x00A1      	MOVWF      _SPI_Rd_Ptr
0x0014	0x30FF      	MOVLW      hi_addr(_SPI1_Read)
0x0015	0x00A2      	MOVWF      _SPI_Rd_Ptr+1
0x0016	0x30FF      	MOVLW      FARG_SPI1_Read_buffer
0x0017	0x00A3      	MOVWF      _SPI_Rd_Ptr+2
0x0018	0x30FF      	MOVLW      hi_addr(FARG_SPI1_Read_buffer)
;__Lib_SPI_c345.c,25 :: 		
0x0019	0x3003      	MOVLW      _SPI1_Write
0x001A	0x00A4      	MOVWF      _SPI_Wr_Ptr
0x001B	0x3000      	MOVLW      hi_addr(_SPI1_Write)
0x001C	0x00A5      	MOVWF      _SPI_Wr_Ptr+1
0x001D	0x3020      	MOVLW      FARG_SPI1_Write_data_
0x001E	0x00A6      	MOVWF      _SPI_Wr_Ptr+2
0x001F	0x3000      	MOVLW      hi_addr(FARG_SPI1_Write_data_)
;__Lib_SPI_c345.c,29 :: 		
0x0020	0x1683      	BSF        STATUS, 5
0x0021	0x1287      	BCF        TRISC5_bit, BitPos(TRISC5_bit+0)
;__Lib_SPI_c345.c,30 :: 		
0x0022	0x1187      	BCF        TRISC3_bit, BitPos(TRISC3_bit+0)
;__Lib_SPI_c345.c,31 :: 		
0x0023	0x1607      	BSF        TRISC4_bit, BitPos(TRISC4_bit+0)
;__Lib_SPI_c345.c,33 :: 		
0x0024	0x1283      	BCF        STATUS, 5
0x0025	0x0194      	CLRF       SSPCON
;__Lib_SPI_c345.c,34 :: 		
0x0026	0x3040      	MOVLW      64
0x0027	0x1683      	BSF        STATUS, 5
0x0028	0x0094      	MOVWF      SSPSTAT
;__Lib_SPI_c345.c,35 :: 		
0x0029	0x1283      	BCF        STATUS, 5
0x002A	0x1694      	BSF        SSPCON, 5
;__Lib_SPI_c345.c,36 :: 		
L_end_SPI1_Init:
0x002B	0x0008      	RETURN
; end of _SPI1_Init
_enviar_DAC:
;SPI2.c,3 :: 		void enviar_DAC(unsigned int valor_enviar){
;SPI2.c,5 :: 		temporal = (valor_enviar >> 8) & 0x0F;
0x002C	0x1283      	BCF        STATUS, 5
0x002D	0x1303      	BCF        STATUS, 6
0x002E	0x082C      	MOVF       FARG_enviar_DAC_valor_enviar+1, 0
0x002F	0x00F0      	MOVWF      R0
0x0030	0x01F1      	CLRF       R0+1
0x0031	0x300F      	MOVLW      15
0x0032	0x0570      	ANDWF      R0, 0
0x0033	0x00A0      	MOVWF      FARG_SPI1_Write_data_
;SPI2.c,6 :: 		temporal |= 0x30;
0x0034	0x3030      	MOVLW      48
0x0035	0x04A0      	IORWF      FARG_SPI1_Write_data_, 1
;SPI2.c,7 :: 		SPI1_Write(temporal);
0x0036	0x2003      	CALL       _SPI1_Write
;SPI2.c,9 :: 		SPI1_Write(temporal);
0x0037	0x082B      	MOVF       FARG_enviar_DAC_valor_enviar, 0
0x0038	0x00A0      	MOVWF      FARG_SPI1_Write_data_
0x0039	0x2003      	CALL       _SPI1_Write
;SPI2.c,10 :: 		}
L_end_enviar_DAC:
0x003A	0x0008      	RETURN
; end of _enviar_DAC
_main:
;SPI2.c,12 :: 		void main() {
;SPI2.c,13 :: 		SPI1_Init();
0x003B	0x2010      	CALL       _SPI1_Init
;SPI2.c,14 :: 		TRISD.f0 = 0;
0x003C	0x1683      	BSF        STATUS, 5
0x003D	0x1008      	BCF        TRISD, 0
;SPI2.c,15 :: 		PORTD.f0 = 1;
0x003E	0x1283      	BCF        STATUS, 5
0x003F	0x1408      	BSF        PORTD, 0
;SPI2.c,16 :: 		cuenta = 0;
0x0040	0x01A7      	CLRF       _cuenta
0x0041	0x01A8      	CLRF       _cuenta+1
;SPI2.c,17 :: 		while(1){
L_main0:
;SPI2.c,18 :: 		PORTD.f0 = 0;
0x0042	0x1008      	BCF        PORTD, 0
;SPI2.c,19 :: 		enviar_DAC(cuenta);
0x0043	0x0827      	MOVF       _cuenta, 0
0x0044	0x00AB      	MOVWF      FARG_enviar_DAC_valor_enviar
0x0045	0x0828      	MOVF       _cuenta+1, 0
0x0046	0x00AC      	MOVWF      FARG_enviar_DAC_valor_enviar+1
0x0047	0x202C      	CALL       _enviar_DAC
;SPI2.c,20 :: 		PORTD.f0 = 1;
0x0048	0x1408      	BSF        PORTD, 0
;SPI2.c,21 :: 		cuenta ++;
0x0049	0x0AA7      	INCF       _cuenta, 1
0x004A	0x1903      	BTFSC      STATUS, 2
0x004B	0x0AA8      	INCF       _cuenta+1, 1
;SPI2.c,22 :: 		if(cuenta > 4095){
0x004C	0x0828      	MOVF       _cuenta+1, 0
0x004D	0x3C0F      	SUBLW      15
0x004E	0x1D03      	BTFSS      STATUS, 2
0x004F	0x2852      	GOTO       L__main5
0x0050	0x0827      	MOVF       _cuenta, 0
0x0051	0x3CFF      	SUBLW      255
L__main5:
0x0052	0x1803      	BTFSC      STATUS, 0
0x0053	0x2856      	GOTO       L_main2
;SPI2.c,23 :: 		cuenta = 0;
0x0054	0x01A7      	CLRF       _cuenta
0x0055	0x01A8      	CLRF       _cuenta+1
;SPI2.c,24 :: 		}
L_main2:
;SPI2.c,26 :: 		}
0x0056	0x2842      	GOTO       L_main0
;SPI2.c,27 :: 		}
L_end_main:
0x0057	0x2857      	GOTO       $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0003      [13]    _SPI1_Write
0x0010      [28]    _SPI1_Init
0x002C      [15]    _enviar_DAC
0x003B      [29]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    INDF
0x0003       [1]    STATUS
0x0004       [1]    FSR
0x0008       [1]    PORTD
0x000A       [1]    PCLATH
0x0013       [1]    SSPBUF
0x0014       [1]    SSPCON
0x0020       [1]    FARG_SPI1_Write_data_
0x0021       [3]    _SPI_Rd_Ptr
0x0024       [3]    _SPI_Wr_Ptr
0x0027       [2]    _cuenta
0x0029       [2]    ___DoICPAddr
0x002B       [2]    FARG_enviar_DAC_valor_enviar
0x0070       [1]    R0
0x0071       [1]    R1
0x0072       [1]    R2
0x0073       [1]    R3
0x0074       [1]    R4
0x0075       [1]    R5
0x0076       [1]    R6
0x0077       [1]    R7
0x0078       [1]    R8
0x0079       [1]    R9
0x007A       [1]    R10
0x007B       [1]    R11
0x007C       [1]    R12
0x007D       [1]    R13
0x007E       [1]    R14
0x007F       [1]    R15
0x0087       [0]    TRISC3_bit
0x0087       [0]    TRISC4_bit
0x0087       [0]    TRISC5_bit
0x0088       [1]    TRISD
0x0094       [1]    SSPSTAT
